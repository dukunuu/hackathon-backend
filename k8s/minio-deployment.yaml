apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.prod.yml -o k8s/
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: minio
  name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: minio
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.prod.yml -o k8s/
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: minio
    spec:
      containers:
        - args:
            - server
            - /data
            - --console-address
            - :9001
          env:
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  key: DB_URL
                  name: minio-env-prod
            - name: ENV
              valueFrom:
                configMapKeyRef:
                  key: ENV
                  name: minio-env-prod
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  key: HOST
                  name: minio-env-prod
            - name: MINIO_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  key: MINIO_ACCESS_KEY_ID
                  name: minio-env-prod
            - name: MINIO_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  key: MINIO_BUCKET_NAME
                  name: minio-env-prod
            - name: MINIO_DEFAULT_BUCKETS
              value: user-profiles
            - name: MINIO_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: MINIO_ENDPOINT
                  name: minio-env-prod
            - name: MINIO_PUBLIC_URL_BASE
              valueFrom:
                configMapKeyRef:
                  key: MINIO_PUBLIC_URL_BASE
                  name: minio-env-prod
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MINIO_ROOT_PASSWORD
                  name: minio-env-prod
            - name: MINIO_ROOT_USER
              valueFrom:
                configMapKeyRef:
                  key: MINIO_ROOT_USER
                  name: minio-env-prod
            - name: MINIO_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  key: MINIO_SECRET_ACCESS_KEY
                  name: minio-env-prod
            - name: MINIO_USE_SSL
              valueFrom:
                configMapKeyRef:
                  key: MINIO_USE_SSL
                  name: minio-env-prod
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: minio-env-prod
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: minio-env-prod
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: minio-env-prod
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: minio-env-prod
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: minio-env-prod
          image: minio/minio:RELEASE.2025-04-22T22-12-26Z-cpuv1
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:9000/minio/health/live
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 20
          name: minio-prod
          ports:
            - containerPort: 9000
              protocol: TCP
            - containerPort: 9001
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: minio-data-prod
      restartPolicy: Always
      volumes:
        - name: minio-data-prod
          persistentVolumeClaim:
            claimName: minio-data-prod
